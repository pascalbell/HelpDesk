---
title: "dataAnalysisTask"
format: pdf
editor: source
---

```{r}

library(knitr)
library(kableExtra)
library(writexl)
```


```{r}
#| label: set up data properly, modifying race
library(tidyverse)

#change dataset here
data <- read_csv("~/workspace/RStudio/helpdesk/Data csv/Data 1:12:24.csv") 

data <- data |>
  filter(datescreen >= "2021-10-01")
  #filter(datescreen >= "2021-09-01" & datescreen <= "2023-09-01")

data <- data |>
   mutate(race = if_else(race___0 == 1, 0, 
                         if_else(race___1 == 1, 1,
                                 if_else(race___2 == 1, 2,
                                         if_else(race___3 == 1, 3, 
                                                 if_else(race___4 == 1, 4,
                                                         if_else(race___5 == 1, 5,
                                                                 if_else(race___6 == 1, 6,
                                                                         if_else(race___7 == 1, 7, 0)))))))),
          .before = race___0)

data <- data |>
  mutate(race = if_else(race == 2 & hispanic == 0, 2, 
         if_else(race == 2 & hispanic == 1, 2.5,
                 if_else(race == 4 & hispanic == 0, 4,
                         if_else(race == 4 & hispanic == 1, 4.5,
                                 if_else(race != 2 & race != 4, race, -1))))))

data <- data |>
  mutate(insurance = if_else(insurance___1 == 1,
                             "Private Insurance",
                             if_else(insurance___2 == 2,
                                     "Medicaid",
                                     if_else(insurance___3 == 1,
                                             "Medicare",
                                             if_else(insurance___4 == 1,
                                                     "No Insurance",
                                                     if_else(insurance___5 == 1,
                                                             "Other",
                                                             "NA"))))))
```

```{r}
#| label: convert race to text
data <- data |>
  mutate(race_txt = case_when(
    race == 0 ~ "Asian",
    race == 1 ~ "Pacific Islander",
    race == 2 ~ "White, Hispanic",
    race == 2.5 ~ "White, Not Hispanic",
    race == 3 ~ "Native Hawaiian",
    race == 4 ~ "Black, Hispanic",
    race == 4.5 ~ "Black, Not Hispanic",
    race == 5 ~ "American Indian/Alaskan Native",
    race == 6 ~ "No Answer",
    race == 7 ~ "Other",
  )) |>
  mutate(race_txt = fct_relevel(race_txt,
                                "Asian",
                                "American Indian/Alaskan Native",
                                "White, Hispanic",
                                "White, Not Hispanic",
                                "Black, Hispanic",
                                "Black, Not Hispanic",
                                "Pacific Islander",
                                "Native Hawaiian",
                                "No Answer",
                                "Other"))
```

```{r}
#| label: race breakdown
data |>
  count(race_txt) |>
  mutate(prop = round(n/sum(n) * 100, 1)) |>
  ggplot(aes(x = race_txt, y = prop)) +
  geom_bar(stat = "identity", fill = "lightblue", color = "black") +
  coord_flip() +
  theme_bw() +
  labs(x = "",
       y = "Percent",
       title = "Patient Breakdown By Race and Ethnicity",
       subtitle = "Who agreed to screening") +
  geom_text(aes(label = if_else(n < 20, "", paste("N =", n))), size = 3, hjust = 1.05) +
  geom_text(aes(label = if_else(n > 180, "", paste(prop, "%"))), hjust = -.3, size = 3) +
  geom_text(aes(label = if_else(n > 180, paste(prop, "%"), "")),
            hjust = 1,
            vjust = 4,
            size = 3)
                  
```



```{r}
#| label: patients by gender
data <- data |>
  mutate(gender_txt = case_when(
    gender == 1 ~ "Man",
    gender == 2 ~ "Woman",
    gender == 3 ~ "Transgender",
    gender == 4 ~ "Non-conforming",
    gender == 5 ~ "Other"
  ))


data |>
  count(gender_txt) |>
  filter(gender_txt == "Man" 
         | gender_txt == "Woman"
         | gender_txt == "Other"
         | is.na(gender_txt)) |>
  mutate(prop = round(100 * n/sum(n), 0)) |>
  ggplot(aes(x = gender_txt, y = prop)) +
  geom_bar(stat = "identity", fill = "lightblue", color = "gray") +
  theme_bw() +
  labs(x = "Gender",
       y = "Percent") +
  geom_text(aes(label = if_else(n > 1,
                                paste(prop, 
                                      "% (",
                                      n,
                                      ")",
                                      sep = ""), "")), vjust = 1.5)
```


```{r}
#| label: list of all patient names

all_names <- data |>
  select(name, 
         datescreen, 
         race_txt, 
         gender_txt,
         age_at_encounter,
         dob,
         insurance,
         zipcode)
all_names
#write.csv(all_names, "~/workspace/RStudio/helpdesk/Data csv/Patients #10:22:23.csv", row.names=FALSE)
#write_xlsx(all_names,"~/workspace/RStudio/helpdesk/Data csv/Patients #10:22:23.xlsx")
```

```{r}
#| label: Patients by Age
data <- data |>
  mutate(age_bins = case_when(
    age_at_encounter >= 15 & age_at_encounter < 25 ~ "15-25",
    age_at_encounter >= 25 & age_at_encounter < 35 ~ "25-35",
    age_at_encounter >= 35 & age_at_encounter < 45 ~ "35-45",
    age_at_encounter >= 45 & age_at_encounter < 55 ~ "45-55",
    age_at_encounter >= 55 & age_at_encounter < 65 ~ "55-65",
    age_at_encounter >= 65 ~ "65+"
  ))

data |>
  count(age_bins) |>
  mutate(prop = round(100 * n/sum(n), 0)) |>
  filter(!is.na(age_bins)) |>
  ggplot(aes(x = age_bins, y = prop)) +
  geom_bar(stat = "identity", fill = "lightblue", color = "gray") +
  theme_bw() +
  labs(x = "Age",
       y = "Percent") +
  geom_text(aes(label = if_else(n > 1,
                                paste(prop, 
                                      "% (",
                                      n,
                                      ")",
                                      sep = ""), "")), 
            vjust = 1.5, 
            size = 3)
```


```{r}
#| label: QR Code race distributions
data |>
  filter(qr_code == 1) |>
  count(race_txt) |>
  ggplot(aes(x = race_txt, y = n)) +
  geom_bar(stat = "identity", fill = "lightblue", color = "black") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 30, vjust = 1, hjust=1)) +
  labs(x = "Race", y = "Count", title = "Race of Patients Using QR Code") +
  geom_text(aes(label = n), vjust = 1.25)
```

```{r}
#| label: QR code by gender
data |>
  filter(qr_code == 1) |>
  count(gender_txt) |>
  ggplot(aes(x = gender_txt, y = n)) +
  geom_bar(stat = "identity", fill = "lightblue", color = "black") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 30, vjust = 1, hjust=1)) +
  labs(x = "Gender", y = "Count", title = "Gender of Patients Using QR Code") +
  geom_text(aes(label = n), vjust = 1.25)
```

```{r}
#| label: QR code by gender
data |>
  filter(qr_code == 1) |>
  count(age_bins) |>
  ggplot(aes(x = age_bins, y = n)) +
  geom_bar(stat = "identity", fill = "lightblue", color = "black") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 30, vjust = 1, hjust=1)) +
  labs(x = "Age", y = "Count", title = "Age of Patients Using QR Code") +
  geom_text(aes(label = n), vjust = 1.25)
```


```{r}
#| label: multiple/one need

data <- data |>
  mutate(sum_needs = needs___1 + needs___2 +
                         needs___3 +
                         needs___4 +
                         needs___5 +
                         needs___6 +
                         needs___8 +
                         needs___10 +
                         needs___11 +
                         needs___12,
         num_need = case_when(
           sum_needs == 0 ~ "No needs",
           sum_needs == 1 ~ "One need",
           sum_needs > 1 ~ "Multiple needs"
         ))
data |>
  filter(num_need != "No needs") |>
  count(race_txt, num_need) |>
  filter(race_txt != "No Answer",
         race_txt != "Other",
         race_txt != "Native Hawaiian",
         race_txt != "Pacific Islander",
         !is.na(race_txt)) |>
  mutate(prop = round(100*n/sum(n), 0)) |>
  ggplot(aes(x = race_txt, y = prop)) +
  geom_bar(stat = "identity", fill = "lightblue", color = "grey") +
  facet_wrap("num_need") +
  labs(x = "",
       y = "Percent") +
  coord_flip() +
 geom_text(aes(label = if_else(n > 50,
                                paste(prop, 
                                      "% (",
                                      n,
                                      ")",
                                      sep = ""), "")), 
            hjust = 1, 
            size = 2.5) +
  geom_text(aes(label = if_else(n < 50,
                                paste(prop, 
                                      "% (",
                                      n,
                                      ")",
                                      sep = ""), "")), 
            hjust = -0.25, 
            size = 2.5) +
  theme(axis.text.y = element_text(size = 10))
  
```

```{r}
#| label: gender by num needs
data |>
  filter(num_need != "No needs") |>
  count(gender_txt, num_need) |>
  ggplot(aes(x = gender_txt, y = n)) +
  geom_bar(stat = "identity", fill = "lightblue", color = "grey") +
  facet_wrap("num_need") +
  labs(x = "Gender",
       y = "Count",
       title = "Gender of Patients Based on Needs") +
  coord_flip() +
  geom_text(aes(label = n), size = 2.5, color = "black")
```

```{r}
#| label: age by num needs
data |>
  filter(num_need != "No needs") |>
  count(age_bins, num_need) |>
  ggplot(aes(x = age_bins, y = n)) +
  geom_bar(stat = "identity", fill = "lightblue", color = "grey") +
  facet_wrap("num_need") +
  labs(x = "Age",
       y = "Count",
       title = "Age of Patients Based on Needs") +
  coord_flip() +
  geom_text(aes(label = n), size = 2.5, color = "black")
```

```{r}
#| label: NCCARE race distributions
nccare360.labs <- c("NCCARE360 Enrolled", "NCCARE360 Not Enrolled")
names(nccare360.labs) <- c(1, 0)

data |>
  filter(nccare360 == 1 | nccare360 == 0) |>
  count(race_txt, nccare360) |>
  ggplot(aes(x = race_txt, y = n)) +
  geom_bar(stat = "identity", fill = "lightblue", color = "gray") +
  facet_wrap("nccare360",
             labeller = labeller(nccare360 = nccare360.labs)) +
  theme_bw() +
  labs(x = "Race", y = "Count", title = "Race of Patients Based On NCCARE360") +
  coord_flip() +
  geom_text(aes(label = n), size = 2.5)
  
```

```{r}
#| label: NCCARE by gender
data |>
  filter(nccare360 == 1 | nccare360 == 0) |>
  count(gender_txt, nccare360) |>
  ggplot(aes(x = gender_txt, y = n)) +
  geom_bar(stat = "identity", fill = "lightblue", color = "gray") +
  facet_wrap("nccare360",
             labeller = labeller(nccare360 = nccare360.labs)) +
  theme_bw() +
  labs(x = "Gender", y = "Count", title = "Gender of Patients Based On NCCARE360") +
  coord_flip() +
  geom_text(aes(label = n), size = 2.5)
```

```{r}
#| label: NCCARE by age
data |>
  filter(nccare360 == 1 | nccare360 == 0) |>
  count(age_bins, nccare360) |>
  ggplot(aes(x = age_bins, y = n)) +
  geom_bar(stat = "identity", fill = "lightblue", color = "gray") +
  facet_wrap("nccare360",
             labeller = labeller(nccare360 = nccare360.labs)) +
  theme_bw() +
  labs(x = "Age", y = "Count", title = "Age of Patients Based On NCCARE360") +
  coord_flip() +
  geom_text(aes(label = n), size = 2.5)
```


```{r}
#| label: attempted referral based on race

data <- data |>
  mutate(attempted_ref_categorical = if_else(is.na(attempt1_ref), 
                                             "not attempted",
                                             "attempted"))
data |>
  filter(attempted_ref_categorical == "attempted") |>
  count(race_txt) |>
  rename("Race" = race_txt,
         "Number that attempted referral" = n) |>
  print.data.frame()
```

```{r}
#| label: attempted referral based on gender
data |>
  filter(attempted_ref_categorical == "attempted") |>
  count(gender_txt) |>
  rename("Gender" = gender_txt,
         "Number that attempted referral" = n) |>
  print.data.frame()
```

```{r}
#| label: attempted referral based on age
data |>
  filter(attempted_ref_categorical == "attempted") |>
  count(age_bins) |>
  rename("Age" = age_bins,
         "Number that attempted referral" = n) |>
  print.data.frame()
```

```{r}
#| label: completed referral based on race

data <- data |>
  mutate(referral_complete_txt = case_when(
    referral_complete == 0 ~ "Incomplete",
    referral_complete == 1 ~ "Unverified",
    referral_complete == 2 ~ "Complete"
  ))
  
data |>
  filter(referral_complete_txt == "Complete") |>
  count(race_txt) |>
  rename("Number with Completed Referral" = n,
         "Race" = race_txt) |>
  print.data.frame()
```

```{r}
#| label: gender by completed referral

data |>
  filter(referral_complete_txt == "Complete") |>
  count(gender_txt) |>
  rename("Number with Completed Referral" = n,
         "Gender" = gender_txt) |>
  print.data.frame()
```

```{r}
#| label: age by completed referral

data |>
  filter(referral_complete_txt == "Complete") |>
  count(age_bins) |>
  rename("Number with Completed Referral" = n,
         "Age" = age_bins) |>
  print.data.frame()
```


```{r}
#| label: completed follow up based on race

data <- data |>
  mutate(followup_2_weeks_complete_txt = case_when(
    followup_2_weeks_complete == 0 ~ "Incomplete",
    followup_2_weeks_complete == 1 ~ "Unverified",
    followup_2_weeks_complete == 2 ~ "Complete",
  ))
data |>
  filter(followup_2_weeks_complete_txt == "Complete") |>
  count(race_txt) |>
  rename("Race" = race_txt,
         "Number with Completed Follow-up" = n) |>
  print.data.frame()

race_followup <- data |>
  filter(followup_2_weeks_complete_txt == "Complete") |>
  count(race_txt) |>
  rename("Race" = race_txt,
         "Number with Completed Follow-up" = n) |>
  pivot_wider(names_from = Race, values_from = "Number with Completed Follow-up") |>
  mutate(Screening = "Followup Complete")
```

```{r}
#| label: gender by completed followup

data |>
  filter(followup_2_weeks_complete_txt == "Complete") |>
  count(gender_txt) |>
  rename("Gender" = gender_txt,
         "Number with Completed Follow-up" = n) |>
  print.data.frame()
```

```{r}
#| label: gender by completed followup

data |>
  filter(followup_2_weeks_complete_txt == "Complete") |>
  count(age_bins) |>
  rename("Age" = age_bins,
         "Number with Completed Follow-up" = n) |>
  print.data.frame()
```


```{r}
#| label: screening positive

data <- data |>
  mutate(screened_positive = if_else(needs___9 == 0, "positive", "negative"))
data |>
  count(screened_positive, race_txt) |>
  rename("Race" = race_txt,
         "Screening" = screened_positive,
         "Count" = n) |>
  print.data.frame()

race_screening <- data |>
  count(screened_positive, race_txt) |>
  rename("Race" = race_txt,
         "Screening" = screened_positive,
         "Count" = n) |>
  pivot_wider(names_from = Race, values_from = Count)

race_screening |>
  full_join(race_followup) |>
  rename("Variable" = Screening)
```

```{r}
#| label: screening by gender
data |>
  count(screened_positive, gender_txt) |>
  rename("Gender" = gender_txt,
         "Screening" = screened_positive,
         "Count" = n) |>
  print.data.frame()
```

```{r}
#| label: screening by gender
data |>
  count(screened_positive, age_bins) |>
  rename("Age" = age_bins,
         "Screening" = screened_positive,
         "Count" = n) |>
  print.data.frame()
```

```{r}
#| label: race by screened negative wanted assistance

data |>
  filter(likeassistance == 1) |>
  count(race_txt) |>
  rename("Race" = race_txt,
         "Number positive + wants assistance" = n) |>
  print.data.frame()
```

```{r}
#| label: gendery by screened negative wanted assistance

data |>
  filter(likeassistance == 1) |>
  count(gender_txt) |>
  rename("Gender" = gender_txt,
         "Number positive + wants assistance" = n) |>
  print.data.frame()
```

```{r}
#| label: age by screened negative wanted assistance

data |>
  filter(likeassistance == 1) |>
  count(age_bins) |>
  rename("Age" = age_bins,
         "Number positive + wants assistance" = n) |>
  print.data.frame()
```


**What are the most common needs and referral categories?**

```{r}
#| label: needs breakdownd
needs <- data |>
  select(contains("needs")) |>
  summarize(total1 = sum(needs___1),
            total2 = sum(needs___2),
            total3 = sum(needs___3),
            total4 = sum(needs___4),
            total5 = sum(needs___5),
            total6 = sum(needs___6),
            total7 = sum(needs___7),
            total8 = sum(needs___8),
            total9 = sum(needs___9),
            total10 = sum(needs___10),
            total11 = sum(needs___11),
            total12 = sum(needs___12)) |>
  mutate(total = 0) |>
  pivot_longer(!total, names_to = "need_category", values_to = "count") |>
  select(!total) |>
  mutate(need = case_when(
    need_category == "total1" ~ "Food",
    need_category == "total2" ~ "Clothing",
    need_category == "total3" ~ "Child care",
    need_category == "total4" ~ "Utilities",
    need_category == "total5" ~ "Medicine/Health Care",
    need_category == "total6" ~ "Phone",
    need_category == "total7" ~ "No Answer",
    need_category == "total8" ~ "Other",
    need_category == "total9" ~ "None",
    need_category == "total10" ~ "Housing",
    need_category == "total11" ~ "Internet",
    need_category == "total12" ~ "Transportation",
  )) |>
  mutate(prop = count/sum(count) * 100) #change to prop by prop = count/sum(count)

needs |>
  mutate(prop = round(prop, digits = 0),
         need = fct_relevel(need, "Other", "None", "No Answer")) |>
  filter(need != "No Answer") |>
  ggplot(aes(x = need, y = prop, fill = need)) +
  geom_bar(width = 1, stat = "identity", color = "black", show.legend = FALSE) +
  theme_light() +
  labs(x = "", 
       y = "Percent of Patients", 
       title = "Needs Breakdown") +
  geom_text(aes(label = paste("N = ", count)), hjust = 1.05, size = 3) +
  geom_text(aes(label = if_else(count < 350, paste(prop, "%", sep = ""), "")),
            hjust = -.3,
            size = 3) +
  coord_flip() +
  geom_text(aes(label = if_else(count > 350, paste(prop, "%", sep = ""), "")),
            hjust = 1,
            vjust = 3.5,
            size = 3)
```

The most common need categories are categories 1, 5, and 4.

```{r}
#| label: referral category breakdown
ref_cat_data <- data |>
  select(contains("ref_cat")) |>
  summarize(total1 = sum(ref_cat___1),
            total2 = sum(ref_cat___2),
            total3 = sum(ref_cat___3),
            total4 = sum(ref_cat___4),
            total5 = sum(ref_cat___5),
            total6 = sum(ref_cat___6),
            total7 = sum(ref_cat___7),
            total8 = sum(ref_cat___8),
            total9 = sum(ref_cat___9),
            total10 = sum(ref_cat___10),
            total11 = sum(ref_cat___11),
            total12 = sum(ref_cat___12),
            total13 = sum(ref_cat___13)) |>
  mutate(total = 0) |>
  pivot_longer(!total, names_to = "ref_cat_num", values_to = "count") |>
  select(!total) |>
  mutate(ref_cat = case_when(
    ref_cat_num == "total1" ~ "Food insecurity",
    ref_cat_num == "total2" ~ "Transportation",
    ref_cat_num == "total3" ~ "Housing",
    ref_cat_num == "total4" ~ "Educational/Professional Development",
    ref_cat_num == "total5" ~ "Childcare/Youth Development",
    ref_cat_num == "total6" ~ "Financial",
    ref_cat_num == "total7" ~ "Access to Medical Care",
    ref_cat_num == "total8" ~ "Social & Emotional Health",
    ref_cat_num == "total9" ~ "Conflict with Criminal Justice System",
    ref_cat_num == "total10" ~ "Domestic/intimate partner violence",
    ref_cat_num == "total11" ~ "Utilities",
    ref_cat_num == "total12" ~ "Clothing",
    ref_cat_num == "total12" ~ "No Referral"
  )) |>
  mutate(ref_cat = fct_relevel(ref_cat, "No Referral"),
         prop = round(count/sum(count), digits = 2))

ref_cat_data |>
  ggplot(aes(x = ref_cat, y = prop, fill = ref_cat)) +
  geom_bar(width = 1, stat = "identity", color = "black") +
  theme_light() +
  labs(x = "Need",
       title = "Referral Categories Breakdown",
       y = "Proportion",
       fill = "") +
  geom_text(aes(label = prop), hjust = 1.1, size = 3) +
  coord_flip() +
  theme(axis.text.y = element_blank())
```


```{r}
data |>
  nrow()
data |>
  filter(needs___9 != 0) |> #screened positive
  nrow()

data |>
  filter (needs___9 == 0,
          likeassistance == 1,
          nccare360 == 1,
          referral_complete == 2,
          followup_2_weeks_complete != 2) |>
  nrow()

#people who reached bottom of the flow
data|>
  filter(needs___9 == 0,
         likeassistance == 1,
         nccare360 == 1,
         referral_complete == 2) |>
  count(followup_2_weeks_complete_txt)
  
```



```{r} 
#| label: get all relevant information
all_info <- data |>
  select(name, 
         datescreen, 
         age_at_encounter,
         dob,
         zipcode,
         screened_positive,
         num_need,
         age_bins,
         gender_txt,
         race_txt,
         insurance,
         followup_2_weeks_complete_txt,
         referral_complete_txt,
         attempted_ref_categorical,
         contains("needs"),
         everything())

#write_xlsx(all_info,"~/workspace/RStudio/helpdesk/Data csv/Patients 11:15:23.xlsx")

```


#Number of Patients at Each Step

```{r}
semester_23F <- data |>
  filter(datescreen >= "2023-08-29",
         datescreen <= "2023-12-31")
```


```{r}
#| label: number of patients screened

semester_23F |>
  nrow()
```

```{r}
#| label: screened positive

semester_23F |>
  filter(screened_positive == "positive") |>
  nrow()
```

```{r}
#| label: wanted assistance

semester_23F |>
  filter(likeassistance == 1,
         screened_positive == "positive") |>
  nrow()
```

```{r}
#| label: enrolled in nccare360

semester_23F |>
  filter(nccare360 == 1,
         likeassistance == 1,
         screened_positive == "positive") |>
  nrow()

semester_23F |>
  count(nccare360)
```

