age_at_encounter >= 25 & age_at_encounter < 35 ~ "25-35",
age_at_encounter >= 35 & age_at_encounter < 45 ~ "35-45",
age_at_encounter >= 45 & age_at_encounter < 55 ~ "45-55",
age_at_encounter >= 55 & age_at_encounter < 65 ~ "55-65",
age_at_encounter >= 65 ~ "65+"
))
data |>
count(age_bins) |>
mutate(prop = round(100 * n/sum(n), 0)) |>
filter(!is.na(age_bins)) |>
ggplot(aes(x = age_bins, y = prop)) +
geom_bar(stat = "identity", fill = "lightblue", color = "gray") +
theme_bw() +
labs(x = "Age",
y = "Percent") +
geom_text(aes(label = if_else(n > 1,
paste(prop,
"% (",
n,
")",
sep = ""), "")),
vjust = 1.5,
size = 3)
#| label: QR Code race distributions
data |>
filter(qr_code == 1) |>
count(race_txt) |>
ggplot(aes(x = race_txt, y = n)) +
geom_bar(stat = "identity", fill = "lightblue", color = "black") +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 1, hjust=1)) +
labs(x = "Race", y = "Count", title = "Race of Patients Using QR Code") +
geom_text(aes(label = n), vjust = 1.25)
#| label: QR code by gender
data |>
filter(qr_code == 1) |>
count(gender_txt) |>
ggplot(aes(x = gender_txt, y = n)) +
geom_bar(stat = "identity", fill = "lightblue", color = "black") +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 1, hjust=1)) +
labs(x = "Gender", y = "Count", title = "Gender of Patients Using QR Code") +
geom_text(aes(label = n), vjust = 1.25)
#| label: QR code by gender
data |>
filter(qr_code == 1) |>
count(age_bins) |>
ggplot(aes(x = age_bins, y = n)) +
geom_bar(stat = "identity", fill = "lightblue", color = "black") +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 1, hjust=1)) +
labs(x = "Age", y = "Count", title = "Age of Patients Using QR Code") +
geom_text(aes(label = n), vjust = 1.25)
#| label: multiple/one need
data <- data |>
mutate(sum_needs = needs___1 + needs___2 +
needs___3 +
needs___4 +
needs___5 +
needs___6 +
needs___8 +
needs___10 +
needs___11 +
needs___12,
num_need = case_when(
sum_needs == 0 ~ "No needs",
sum_needs == 1 ~ "One need",
sum_needs > 1 ~ "Multiple needs"
))
# data |>
#   filter(num_need != "No needs") |>
#   count(race_txt, num_need) |>
#   filter(race_txt != "No Answer",
#          race_txt != "Other",
#          race_txt != "Native Hawaiian",
#          race_txt != "Pacific Islander",
#          !is.na(race_txt)) |>
#   mutate(prop = round(100*n/sum(n), 0)) |>
#   ggplot(aes(x = race_txt, y = prop)) +
#   geom_bar(stat = "identity", fill = "lightblue", color = "grey") +
#   facet_wrap("num_need") +
#   labs(x = "",
#        y = "Percent") +
#   coord_flip() +
#  geom_text(aes(label = if_else(n > 50,
#                                 paste(prop,
#                                       "% (",
#                                       n,
#                                       ")",
#                                       sep = ""), "")),
#             hjust = 1,
#             size = 2.5) +
#   geom_text(aes(label = if_else(n < 50,
#                                 paste(prop,
#                                       "% (",
#                                       n,
#                                       ")",
#                                       sep = ""), "")),
#             hjust = -0.25,
#             size = 2.5) +
#   theme(axis.text.y = element_text(size = 10))
#| label: gender by num needs
data |>
filter(num_need != "No needs") |>
count(gender_txt, num_need) |>
ggplot(aes(x = gender_txt, y = n)) +
geom_bar(stat = "identity", fill = "lightblue", color = "grey") +
facet_wrap("num_need") +
labs(x = "Gender",
y = "Count",
title = "Gender of Patients Based on Needs") +
coord_flip() +
geom_text(aes(label = n), size = 2.5, color = "black")
#| label: age by num needs
data |>
filter(num_need != "No needs") |>
count(age_bins, num_need) |>
ggplot(aes(x = age_bins, y = n)) +
geom_bar(stat = "identity", fill = "lightblue", color = "grey") +
facet_wrap("num_need") +
labs(x = "Age",
y = "Count",
title = "Age of Patients Based on Needs") +
coord_flip() +
geom_text(aes(label = n), size = 2.5, color = "black")
#| label: NCCARE race distributions
nccare360.labs <- c("NCCARE360 Enrolled", "NCCARE360 Not Enrolled")
names(nccare360.labs) <- c(1, 0)
data |>
filter(nccare360 == 1 | nccare360 == 0) |>
count(race_txt, nccare360) |>
ggplot(aes(x = race_txt, y = n)) +
geom_bar(stat = "identity", fill = "lightblue", color = "gray") +
facet_wrap("nccare360",
labeller = labeller(nccare360 = nccare360.labs)) +
theme_bw() +
labs(x = "Race", y = "Count", title = "Race of Patients Based On NCCARE360") +
coord_flip() +
geom_text(aes(label = n), size = 2.5)
#| label: NCCARE by gender
data |>
filter(nccare360 == 1 | nccare360 == 0) |>
count(gender_txt, nccare360) |>
ggplot(aes(x = gender_txt, y = n)) +
geom_bar(stat = "identity", fill = "lightblue", color = "gray") +
facet_wrap("nccare360",
labeller = labeller(nccare360 = nccare360.labs)) +
theme_bw() +
labs(x = "Gender", y = "Count", title = "Gender of Patients Based On NCCARE360") +
coord_flip() +
geom_text(aes(label = n), size = 2.5)
#| label: NCCARE by age
data |>
filter(nccare360 == 1 | nccare360 == 0) |>
count(age_bins, nccare360) |>
ggplot(aes(x = age_bins, y = n)) +
geom_bar(stat = "identity", fill = "lightblue", color = "gray") +
facet_wrap("nccare360",
labeller = labeller(nccare360 = nccare360.labs)) +
theme_bw() +
labs(x = "Age", y = "Count", title = "Age of Patients Based On NCCARE360") +
coord_flip() +
geom_text(aes(label = n), size = 2.5)
#| label: attempted referral based on race
data <- data |>
mutate(attempted_ref_categorical = if_else(is.na(attempt1_ref),
"not attempted",
"attempted"))
data |>
filter(attempted_ref_categorical == "attempted") |>
count(race_txt) |>
rename("Race" = race_txt,
"Number that attempted referral" = n) |>
print.data.frame()
#| label: attempted referral based on gender
data |>
filter(attempted_ref_categorical == "attempted") |>
count(gender_txt) |>
rename("Gender" = gender_txt,
"Number that attempted referral" = n) |>
print.data.frame()
#| label: attempted referral based on age
data |>
filter(attempted_ref_categorical == "attempted") |>
count(age_bins) |>
rename("Age" = age_bins,
"Number that attempted referral" = n) |>
print.data.frame()
#| label: completed referral based on race
data <- data |>
mutate(referral_complete_txt = case_when(
referral_complete == 0 ~ "Incomplete",
referral_complete == 1 ~ "Unverified",
referral_complete == 2 ~ "Complete"
))
data |>
filter(referral_complete_txt == "Complete") |>
count(race_txt) |>
rename("Number with Completed Referral" = n,
"Race" = race_txt) |>
print.data.frame()
#| label: gender by completed referral
data |>
filter(referral_complete_txt == "Complete") |>
count(gender_txt) |>
rename("Number with Completed Referral" = n,
"Gender" = gender_txt) |>
print.data.frame()
#| label: age by completed referral
data |>
filter(referral_complete_txt == "Complete") |>
count(age_bins) |>
rename("Number with Completed Referral" = n,
"Age" = age_bins) |>
print.data.frame()
#| label: completed follow up based on race
data <- data |>
mutate(followup_2_weeks_complete_txt = case_when(
followup_2_weeks_complete == 0 ~ "Incomplete",
followup_2_weeks_complete == 1 ~ "Unverified",
followup_2_weeks_complete == 2 ~ "Complete",
))
data |>
filter(followup_2_weeks_complete_txt == "Complete") |>
count(race_txt) |>
rename("Race" = race_txt,
"Number with Completed Follow-up" = n) |>
print.data.frame()
race_followup <- data |>
filter(followup_2_weeks_complete_txt == "Complete") |>
count(race_txt) |>
rename("Race" = race_txt,
"Number with Completed Follow-up" = n) |>
pivot_wider(names_from = Race, values_from = "Number with Completed Follow-up") |>
mutate(Screening = "Followup Complete")
#| label: gender by completed followup
data |>
filter(followup_2_weeks_complete_txt == "Complete") |>
count(gender_txt) |>
rename("Gender" = gender_txt,
"Number with Completed Follow-up" = n) |>
print.data.frame()
#| label: gender by completed followup
data |>
filter(followup_2_weeks_complete_txt == "Complete") |>
count(age_bins) |>
rename("Age" = age_bins,
"Number with Completed Follow-up" = n) |>
print.data.frame()
#| label: screening positive
data <- data |>
mutate(screened_positive = if_else(needs___9 == 0, "positive", "negative"))
data |>
count(screened_positive, race_txt) |>
rename("Race" = race_txt,
"Screening" = screened_positive,
"Count" = n) |>
print.data.frame()
race_screening <- data |>
count(screened_positive, race_txt) |>
rename("Race" = race_txt,
"Screening" = screened_positive,
"Count" = n) |>
pivot_wider(names_from = Race, values_from = Count)
race_screening |>
full_join(race_followup) |>
rename("Variable" = Screening)
#| label: screening by gender
data |>
count(screened_positive, gender_txt) |>
rename("Gender" = gender_txt,
"Screening" = screened_positive,
"Count" = n) |>
print.data.frame()
#| label: screening by gender
data |>
count(screened_positive, age_bins) |>
rename("Age" = age_bins,
"Screening" = screened_positive,
"Count" = n) |>
print.data.frame()
#| label: race by screened negative wanted assistance
data |>
filter(likeassistance == 1) |>
count(race_txt) |>
rename("Race" = race_txt,
"Number positive + wants assistance" = n) |>
print.data.frame()
#| label: gendery by screened negative wanted assistance
data |>
filter(likeassistance == 1) |>
count(gender_txt) |>
rename("Gender" = gender_txt,
"Number positive + wants assistance" = n) |>
print.data.frame()
#| label: age by screened negative wanted assistance
data |>
filter(likeassistance == 1) |>
count(age_bins) |>
rename("Age" = age_bins,
"Number positive + wants assistance" = n) |>
print.data.frame()
languages <- data |>
select(language)
languages
data |>
select(contains(language))
data |>
select(contains("language"))
data |>
select(language) |>
mutate(language_txt = if_else(language == 0, "English",
if_else(language == 1, "Choose not to answer",
"Language other than english")))
data |>
select(language) |>
mutate(language_txt = if_else(language == 0, "English",
if_else(language == 1, "Choose not to answer",
"Language other than english")))  |>
count(language_txt)
data |>
select(language) |>
mutate(language_txt = if_else(language == 0, "English",
if_else(language == 1, "Choose not to answer",
"Language other than english")))  |>
count(language_txt) |>
mutate(prop = n/sum(n))
data |>
select(language) |>
mutate(language_txt = if_else(language == 0, "English",
if_else(language == 1, "Choose not to answer",
"Language other than english")))  |>
count(language_txt) |>
mutate(prop = n/sum(n) * 100)
data |>
select(language) |>
mutate(language_txt = if_else(language == 0, "English",
if_else(language == 1, "Choose not to answer",
"Language other than english")))  |>
count(language_txt) |>
mutate(prop = n/sum(n) * 100) |>
ggplot(aes(x = language_txt, y = prop, fill = need)) +
geom_bar(width = 1, stat = "identity", color = "black", show.legend = FALSE) +
theme_light() +
labs(x = "",
y = "Percent of Patients",
title = "Language Breakdown ED") +
geom_text(aes(label = paste("N = ", count)), hjust = 1.05, size = 3) +
geom_text(aes(label = if_else(count < 350, paste(prop, "%", sep = ""), "")),
hjust = -.3,
size = 3) +
coord_flip() +
geom_text(aes(label = if_else(count > 350, paste(prop, "%", sep = ""), "")),
hjust = 1,
vjust = 3.5,
size = 3)
data |>
select(language) |>
mutate(language_txt = if_else(language == 0, "English",
if_else(language == 1, "Choose not to answer",
"Language other than english")))  |>
count(language_txt) |>
mutate(prop = n/sum(n) * 100) |>
ggplot(aes(x = language_txt, y = prop)) +
geom_bar(width = 1, stat = "identity", color = "black", show.legend = FALSE) +
theme_light() +
labs(x = "",
y = "Percent of Patients",
title = "Language Breakdown ED") +
geom_text(aes(label = paste("N = ", count)), hjust = 1.05, size = 3) +
geom_text(aes(label = if_else(count < 350, paste(prop, "%", sep = ""), "")),
hjust = -.3,
size = 3) +
coord_flip() +
geom_text(aes(label = if_else(count > 350, paste(prop, "%", sep = ""), "")),
hjust = 1,
vjust = 3.5,
size = 3)
data |>
select(language) |>
mutate(language_txt = if_else(language == 0, "English",
if_else(language == 1, "Choose not to answer",
"Language other than english")))  |>
count(language_txt) |>
mutate(prop = n/sum(n) * 100) |>
ggplot(aes(x = language_txt, y = prop)) +
geom_bar(width = 1, stat = "identity", color = "black", show.legend = FALSE) +
theme_light() +
labs(x = "",
y = "Percent of Patients",
title = "Language Breakdown ED") +
geom_text(aes(label = paste("N = ", count)), hjust = 1.05, size = 3) +
geom_text(aes(label = if_else(count < 350, paste(prop, "%", sep = ""), "")),
hjust = -.3,
size = 3) +
coord_flip()
data |>
select(language) |>
mutate(language_txt = if_else(language == 0, "English",
if_else(language == 1, "Choose not to answer",
"Language other than english")))  |>
count(language_txt) |>
mutate(prop = n/sum(n) * 100) |>
ggplot(aes(x = language_txt, y = prop)) +
geom_bar(width = 1, stat = "identity", color = "black", show.legend = FALSE) +
theme_light() +
labs(x = "",
y = "Percent of Patients",
title = "Language Breakdown ED") +
geom_text(aes(label = paste("N = ", count)), hjust = 1.05, size = 3)
data |>
select(language) |>
mutate(language_txt = if_else(language == 0, "English",
if_else(language == 1, "Choose not to answer",
"Language other than english")))  |>
count(language_txt) |>
mutate(prop = round(n/sum(n) * 100, digits = 2)) |>
ggplot(aes(x = language_txt, y = prop)) +
geom_bar(width = 1, stat = "identity", color = "black", show.legend = FALSE) +
theme_light() +
labs(x = "",
y = "Percent of Patients",
title = "Language Breakdown ED") +
geom_text(aes(label = paste("N = ", count)), hjust = 1.05, size = 3) +
geom_text(aes(label = if_else(count < 350, paste(prop, "%", sep = ""), "")),
hjust = -.3,
size = 3) +
coord_flip() +
geom_text(aes(label = if_else(count > 350, paste(prop, "%", sep = ""), "")),
hjust = 1,
vjust = 3.5,
size = 3)
data |>
select(language) |>
mutate(language_txt = if_else(language == 0, "English",
if_else(language == 1, "Choose not to answer",
"Language other than english")))  |>
count(language_txt) |>
mutate(prop = round(n/sum(n) * 100, digits = 2)) |>
ggplot(aes(x = language_txt, y = prop)) +
geom_bar(width = 1, stat = "identity", color = "black", show.legend = FALSE) +
theme_light() +
labs(x = "",
y = "Percent of Patients",
title = "Language Breakdown ED") +
geom_text(aes(label = paste("N = ", prop)), hjust = 1.05, size = 3)
data |>
select(language) |>
mutate(language_txt = if_else(language == 0, "English",
if_else(language == 1, "Choose not to answer",
"Language other than english")))  |>
count(language_txt) |>
mutate(prop = round(n/sum(n) * 100, digits = 2)) |>
ggplot(aes(x = age_bins, y = prop)) +
geom_bar(stat = "identity", fill = "lightblue", color = "black") +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 1, hjust=1)) +
labs(x = "Age", y = "Count", title = "Age of Patients Using QR Code") +
geom_text(aes(label = n), vjust = 1.25)
data |>
select(language) |>
mutate(language_txt = if_else(language == 0, "English",
if_else(language == 1, "Choose not to answer",
"Language other than english")))  |>
count(language_txt) |>
mutate(prop = round(n/sum(n) * 100, digits = 2)) |>
ggplot(aes(x = language_txt, y = prop)) +
geom_bar(stat = "identity", fill = "lightblue", color = "black") +
theme_bw() +
theme(axis.text.x = element_text(angle = 30, vjust = 1, hjust=1)) +
labs(x = "Age", y = "Count", title = "Age of Patients Using QR Code") +
geom_text(aes(label = n), vjust = 1.25)
data |>
select(language) |>
mutate(language_txt = if_else(language == 0, "English",
if_else(language == 1, "Choose not to answer",
"Language other than english")))  |>
count(language_txt) |>
mutate(prop = round(n/sum(n) * 100, digits = 2)) |>
ggplot(aes(x = language_txt, y = prop)) +
geom_bar(stat = "identity", fill = "lightblue", color = "gray") +
theme_bw() +
labs(x = "Language",
y = "Percent") +
geom_text(aes(label = if_else(n > 1,
paste(prop,
"% (",
n,
")",
sep = ""), "")),
vjust = 1.5,
size = 3)
data |>
select(language) |>
mutate(language_txt = if_else(language == 0, "English",
if_else(language == 1, "Choose not to answer",
"Language other than english")))  |>
count(language_txt) |>
mutate(prop = round(n/sum(n) * 100, digits = 2)) |>
ggplot(aes(x = language_txt, y = prop)) +
geom_bar(stat = "identity", fill = "lightblue", color = "gray") +
theme_bw() +
labs(x = "Language",
y = "Percent") +
geom_text(aes(label = if_else(n > 1,
paste(prop,
"% (",
n,
")",
sep = ""), "")),
vjust = 1.5,
size = 3)
